# This file is maintained by velocitas CLI, do not modify manually. Change settings in .velocitas.json
# Copyright (c) 2022 Robert Bosch GmbH and Microsoft Corporation
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Build Docker Image for single arch

on:
  workflow_call:
    inputs:
      platform:
        required: true
        type: string
      app_name:
        required: true
        type: string

jobs:
  build-image:
    name: "Building image (${{ inputs.app_name }})"
    runs-on: ubuntu-22.04
    container: ghcr.io/eclipse-velocitas/devcontainer-base-images/python:v0.2
    env:
      APP_NAME: ${{ inputs.app_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Clone Release Documentation Action repository
        uses: actions/checkout@v3
        with:
          repository: eclipse-velocitas/release-documentation-action
          path: "./.github/actions"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - id: github-repository-name-case-adjusted
        name: Prepare repository name in lower case for docker upload. This supports repository names in mixed case
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ github.repository }}

      - uses: de-vri-es/setup-git-credentials@v2
        with:
          credentials: https://user:${{ secrets.GITHUB_TOKEN }}@github.com/


      - name: Setup git config
        shell: bash
        run: |
          git config --global user.email "github-automation@users.noreply.github.com"
          git config --global user.name "Github Automation"

      - name: Set Arguments for next step
        id: set_args
        run: |
          if [ ${{ inputs.platform }} = "multiarch" ]; then
            echo "Build Multiarch"
            echo "platforms=linux/amd64, linux/arm64" >> $GITHUB_OUTPUT
            echo "type=oci,dest=./${{ env.APP_NAME }}.tar" >> $GITHUB_OUTPUT
          else
            echo "Build ${{inputs.platform}}"
            echo "platforms=linux/${{ inputs.platform }}" >> $GITHUB_OUTPUT
            echo "type=docker,dest=./${{ env.APP_NAME }}.tar" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: "${{ env.APP_NAME }} -- Build image"
        id: image_build
        uses: docker/build-push-action@v4
        with:
          provenance: false
          pull: true
          push: false
          outputs: |
            type=${{ steps.set_args.outputs.type }}
          file: ./app/Dockerfile
          context: .
          platforms: ${{ steps.set_args.outputs.platforms }}
          secrets: |
            "github_token=user:${{ secrets.GITHUB_TOKEN }}"
          tags: ${{ github.sha }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{steps.github-repository-name-case-adjusted.outputs.lowercase}}

      - name: "${{ env.APP_NAME }} -- Upload image to artifacts"
        if: ${{ steps.image_build.outcome == 'success' }}
        uses: actions/upload-artifact@v3
        env:
          VAPP_IMAGE: ${{ env.APP_NAME }}-${{ inputs.platform }}
        with:
          name: ${{ env.VAPP_IMAGE }}
          path: ./${{ env.APP_NAME }}.tar
          if-no-files-found: error

      - name: "${{ env.APP_NAME }} -- Upload AppManifest.json to artifacts"
        if: ${{ steps.image_build.outcome == 'success' }}
        uses: actions/upload-artifact@v3
        with:
          name: AppManifest
          path: ./app/AppManifest.json
          if-no-files-found: error
